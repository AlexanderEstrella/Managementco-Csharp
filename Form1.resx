<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAf9JREFUaEPtmEtKHUEUhi8IEtAViFEHkkWoCzAjwYG6Bx8hWzDEx0AzDoIzH7gA
        dSmCM1/JOAlE8Pl/TR+4A+Vap6u7WqgPPrhV3PqrTldX30t3Mpn3w4hclqfyTP4r5TN9S/KjbC3D8qe8
        l089fJBHcky2ilnJVWeR/+WenJOf5EApn+flvryVfPevnJGt4Kt8lCyMAri1ejEqD6TtzheZFHaChdzJ
        RToC4SwxloxkO8OBtdvJU4SxIsn4I4foaJpdabdTVQ4lWTtFq0E4BzydONhvORO94OnFA4BMnn6Nwb0d
        azcMO/xVbtNgTiST8oiNxYIk87hoNcS5ZNLxohUHfmfI5B9AY/BDxqSDRSsOZJFJdmMwIcamrtxXyYX0
        IBfi5V0V0i835Y20CVJ5LdclawpmQ74UmtI1GQxXgcETRSstk5K1sKZg7Cq0Bfd6ciE1kQvJhdRELqRq
        IR/kD/lL8u9gu+zzkqwQirAMc0t6sYxg3ANL2AnLMH9LL5YRjHtgyaW0DPNCerGMYNwDS75JyzBXpRfL
        CMY9sKRPWoZJnxfLCMY9sAvLiJkVTMzJY2YFE2Py7gNf5aCDez3ugV18lhSA03RUIGkhMcmF5EJqIheS
        C6kJ93rsBR0vx1IzJVnLVdEKhHetdhXa4ncZDC+MKcZ2JqXsBEW88hK703kGYRB6UbF2TjsAAAAASUVO
        RK5CYII=
</value>
  </data>
  <metadata name="label2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>